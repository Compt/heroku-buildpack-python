#!/usr/bin/env bash

ROOT_BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

BIN_DIR=$(cd "$(dirname "$0")"; pwd) # absolute path
SUBDIRS_ENV_VAR_PATH="$ENV_DIR/PYTHON_SUBDIRS"
POST_COMPILE_SCRIPT="$ROOT_BUILD_DIR/post_compile_python.sh"
OG_COMPILE_SCRIPT="$BIN_DIR/og_compile"

if test -f "$SUBDIRS_ENV_VAR_PATH"; then
  subdirs_str=$(cat "$SUBDIRS_ENV_VAR_PATH")

  subdirs_arr=($(echo "$subdirs_str" | tr ',' '\n'))

  for item in "${subdirs_arr[@]}"
  do
      echo "Running compile within dir: $ROOT_BUILD_DIR/$item"
      /bin/bash "$OG_COMPILE_SCRIPT" "$ROOT_BUILD_DIR/$item" $CACHE_DIR $ENV_DIR

      echo "Checking if there are .profile.d files to copy..."

      if test -f "$ROOT_BUILD_DIR/$item/.profile.d"; then
        echo "Copying .profile.d files"
        mkdir -p "$ROOT_BUILD_DIR/.profile.d"
        cp -n "$ROOT_BUILD_DIR/$item/.profile.d/*" "$ROOT_BUILD_DIR/.profile.d/"
      else
        echo "No profile.d files found"
      fi

  done

  if test -f "$POST_COMPILE_SCRIPT"; then
    # Use this to move things around if necessary after the build/compile step is completed.
    echo "Found post compile script ($POST_COMPILE_SCRIPT). Executing..."
    /bin/bash "$POST_COMPILE_SCRIPT" "$ROOT_BUILD_DIR"
  fi
else
  echo "No subdir found. Defaulting to current directory."
  /bin/bash "$OG_COMPILE_SCRIPT" "$ROOT_BUILD_DIR" $CACHE_DIR $ENV_DIR
fi

